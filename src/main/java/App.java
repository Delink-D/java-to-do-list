/*
 * This Java source file was generated by the Gradle 'init' task.
 */

import java.util.*;
import spark.ModelAndView;
import spark.template.velocity.VelocityTemplateEngine;
import static spark.Spark.*;

public class App {
	public static void main(String[] args) {
		staticFileLocation("/public");
    	String layout = "templates/layout.vtl";

    	get("/", (request, response) -> {
    		Map<String, Object> model = new HashMap<String, Object>();

    		// model.put("tasks", request.session().attribute("tasks"));
    		model.put("view", "templates/index.vtl");

    		return new ModelAndView(model,layout);
    	}, new VelocityTemplateEngine());

        get("/about", (request, response) -> {
            Map<String, Object> model = new HashMap<String, Object>();
            
            model.put("view", "templates/about.vtl");

            return new ModelAndView(model, layout);
        }, new VelocityTemplateEngine());

        get("/tasks/newtask", (request, response) -> {
            Map<String, Object> model = new HashMap<String, Object>();

            model.put("view", "templates/task-form.vtl");

            return new ModelAndView(model, layout);
        }, new VelocityTemplateEngine());

        get("/tasks", (request, response) -> {
            Map<String, Object> model = new HashMap<String, Object>();

            model.put("tasks", Task.getAll());
            model.put("view", "templates/tasks.vtl");

            return new ModelAndView(model, layout);
        }, new VelocityTemplateEngine());

    	post("/tasks", (request, response) -> {
    		Map<String, Object> model = new HashMap<String, Object>();

            Category thisCat = Category.findCat(Integer.parseInt(request.queryParams("categoryId")));
            String newDescription = request.queryParams("description");
    		Task myTask = new Task(newDescription);

            thisCat.addTask(myTask);

            model.put("cat", thisCat);
    		model.put("view", "templates/tasks.vtl");

    		return new ModelAndView(model, layout);
    	}, new VelocityTemplateEngine());

        get("/tasks/:id", (request, response) -> {
            Map<String, Object> model = new HashMap<String, Object>();

            Task thisTask = Task.find(Integer.parseInt(request.params(":id")));

            model.put("task", thisTask);
            model.put("view", "templates/task.vtl");

            return new ModelAndView(model, layout);
        }, new VelocityTemplateEngine());

        get("/categories/new-cat", (request, response) -> {
            Map<String, Object> model = new HashMap<String, Object>();
            model.put("view", "templates/category-form.vtl");
            return new ModelAndView(model, layout);
        }, new VelocityTemplateEngine());

        post("/categories", (request, response) -> {
            Map<String, Object> model = new HashMap<String, Object>();

            String catName = request.queryParams("catname");
            Category newCat = new Category(catName);

            model.put("view", "templates/category-success.vtl");

            return new ModelAndView(model, layout);
        }, new VelocityTemplateEngine());

        get("/categories", (request, response) -> {
            Map<String, Object> model = new HashMap<String, Object>();
            model.put("cats", Category.getCat());
            model.put("view", "templates/categories.vtl");
            return new ModelAndView(model, layout);
        }, new VelocityTemplateEngine());

        get("/categories/:id", (request, response) -> {
            Map<String, Object> model = new HashMap<String, Object>();

            Category thisCat = Category.findCat(Integer.parseInt(request.params(":id")));

            model.put("cat", thisCat);
            model.put("view", "templates/category.vtl");

            return new ModelAndView(model, layout);
        }, new VelocityTemplateEngine());

        get("categories/:id/tasks/newtask", (request, response) -> {
            Map<String, Object> model = new HashMap<String, Object>();
            Category category = Category.findCat(Integer.parseInt(request.params(":id")));
            model.put("category", category);
            model.put("view", "templates/category-tasks-form.vtl");
            return new ModelAndView(model, layout);
        }, new VelocityTemplateEngine());
	}
}
